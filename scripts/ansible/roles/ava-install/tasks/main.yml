- name: Create directories
  become: true
  file:
    path: "{{ item.path }}"
    owner: "{{ item.owner | default(ava_daemon_user) }}"
    group: "{{ item.group | default(ava_daemon_group) }}"
    mode: "{{ item.mode }}"
    recurse: "{{ item.recurse | default(omit) }}"
    state: directory
  loop:
    - path: "{{ ava_daemon_data_dir }}"
      mode: u=rwX,go=rX
    - path: "{{ ava_daemon_keys_dir }}"
      mode: u=rX,go=
    - path: "{{ ava_daemon_log_dir }}"
      mode: u=rwX,go=rX
    - path: "{{ ava_daemon_plugin_dir }}"
      owner: root
      group: root
      mode: u=rwX,go=rX
      recurse: true
  loop_control:
    label: "{{ item.path }}"
  notify:
    - Restart AVA service

- name: Install binary
  become: true
  copy:
    src: "{{ ava_binary }}"
    dest: "{{ ava_daemon_bin_dir }}/ava"
    remote_src: true
    owner: root
    group: root
    mode: u=rwx,go=rx
  notify:
    - Restart AVA service

- name: Install plugins
  become: true
  copy:
    src: "{{ item.path }}"
    dest: "{{ ava_daemon_plugin_dir }}"
    owner: root
    group: root
    mode: u=rwx,go=rx
    remote_src: true
  loop:
    - path: "{{ repo_folder }}/build/plugins/evm"
  notify:
    - Restart AVA service

- name: Install staking files
  become: true
  copy:
    src: "{{ item.src }}"
    dest: "{{ ava_daemon_keys_dir }}"
    owner: "{{ ava_daemon_user }}"
    group: "{{ ava_daemon_group }}"
    mode: "{{ item.mode }}"
    remote_src: true
  loop:
    - src: "{{ staking_tls_key_file }}"
      mode: u=r,go=
    - src: "{{ staking_tls_cert_file }}"
      mode: ugo=r
  notify:
    - Restart AVA service
