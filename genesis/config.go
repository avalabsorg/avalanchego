// (c) 2019-2020, Ava Labs, Inc. All rights reserved.
// See the file LICENSE for licensing terms.

package genesis

import (
	"fmt"
	"math"

	"github.com/ava-labs/gecko/ids"
	"github.com/ava-labs/gecko/utils/constants"
	"github.com/ava-labs/gecko/utils/formatting"
)

// Note that since an Avalanche network has exactly one Platform Chain, and the
// Platform Chain defines the genesis state of the network (who is staking,
// which chains exist, etc.), defining the genesis state of the Platform Chain
// is the same as defining the genesis state of the network.

// Config contains the genesis addresses used to construct a genesis
type Config struct {
	NetworkID                                                   uint32
	MintAddresses, FundedAddresses, StakerIDs                   []string
	ParsedMintAddresses, ParsedFundedAddresses, ParsedStakerIDs []ids.ShortID
	EVMBytes                                                    []byte
	Message                                                     string
}

func (c *Config) init() error {
	expectedHRP := constants.GetHRP(c.NetworkID)
	c.ParsedMintAddresses = nil
	for _, addrStr := range c.MintAddresses {
		hrp, addrBytes, err := formatting.ParseBech32(addrStr)
		if err != nil {
			return err
		}
		if hrp != expectedHRP {
			return fmt.Errorf("wrong HRP, expected %q got %q", expectedHRP, hrp)
		}
		addr, err := ids.ToShortID(addrBytes)
		if err != nil {
			return err
		}
		c.ParsedMintAddresses = append(c.ParsedMintAddresses, addr)
	}
	c.ParsedFundedAddresses = nil
	for _, addrStr := range c.FundedAddresses {
		hrp, addrBytes, err := formatting.ParseBech32(addrStr)
		if err != nil {
			return err
		}
		if hrp != expectedHRP {
			return fmt.Errorf("wrong HRP, expected %q got %q", expectedHRP, hrp)
		}
		addr, err := ids.ToShortID(addrBytes)
		if err != nil {
			return err
		}
		c.ParsedFundedAddresses = append(c.ParsedFundedAddresses, addr)
	}
	c.ParsedStakerIDs = nil
	for _, addrStr := range c.StakerIDs {
		addr, err := ids.ShortFromPrefixedString(addrStr, constants.NodeIDPrefix)
		if err != nil {
			return err
		}
		c.ParsedStakerIDs = append(c.ParsedStakerIDs, addr)
	}
	return nil
}

// Hard coded genesis constants
var (
	EverestConfig = Config{
		NetworkID:     constants.EverestID,
		MintAddresses: []string{},
		FundedAddresses: []string{
			"everest1vxn8qxc4wjaumd5zefh40vjx2npjeysmuk9wj9",
			"everest1hcak2mtd758w0jdty76svreu84kj59fxerpqe4",
			"everest1gmf872653xykm8j7et2k8mxld046arrj5j2tvj",
			"everest1gvvymfqhwns6zpy2fwnjwmfl2hkj9k4zqa42cw",
			"everest19p2cct7hyz2yyh3pewltgkdr6yj67vfza6m79k",
			"everest10snn22afww6pkek89xpxu9varewxe26dvkqrxk",
			"everest1y2j34gqw4nc459cmluq560xxms3l8ek89t3dlm",
			"everest13j2sd0dfngaznc5e4dzk02yhp4g3et6sg6dtll",
			"everest1qc4ly2zz6zq95sd7r9r53q8hzywj0j55fh2m49",
			"everest1qy8awey258pffs4xxl7pjs6mm8yvhhw9nsyut9",
		},
		StakerIDs: []string{
			"NodeID-LQwRLm4cbJ7T2kxcxp4uXCU5XD8DFrE1C",
			"NodeID-hArafGhY2HFTbwaaVh1CSCUCUCiJ2Vfb",
			"NodeID-2m38qc95mhHXtrhjyGbe7r2NhniqHHJRB",
			"NodeID-4QBwET5o8kUhvt9xArhir4d3R25CtmZho",
			"NodeID-NpagUxt6KQiwPch9Sd4osv8kD1TZnkjdk",
		},
		EVMBytes: []byte{
			0x7b, 0x22, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
			0x22, 0x3a, 0x7b, 0x22, 0x63, 0x68, 0x61, 0x69,
			0x6e, 0x49, 0x64, 0x22, 0x3a, 0x34, 0x33, 0x31,
			0x31, 0x30, 0x2c, 0x22, 0x68, 0x6f, 0x6d, 0x65,
			0x73, 0x74, 0x65, 0x61, 0x64, 0x42, 0x6c, 0x6f,
			0x63, 0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x64,
			0x61, 0x6f, 0x46, 0x6f, 0x72, 0x6b, 0x42, 0x6c,
			0x6f, 0x63, 0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22,
			0x64, 0x61, 0x6f, 0x46, 0x6f, 0x72, 0x6b, 0x53,
			0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x3a,
			0x74, 0x72, 0x75, 0x65, 0x2c, 0x22, 0x65, 0x69,
			0x70, 0x31, 0x35, 0x30, 0x42, 0x6c, 0x6f, 0x63,
			0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x65, 0x69,
			0x70, 0x31, 0x35, 0x30, 0x48, 0x61, 0x73, 0x68,
			0x22, 0x3a, 0x22, 0x30, 0x78, 0x32, 0x30, 0x38,
			0x36, 0x37, 0x39, 0x39, 0x61, 0x65, 0x65, 0x62,
			0x65, 0x61, 0x65, 0x31, 0x33, 0x35, 0x63, 0x32,
			0x34, 0x36, 0x63, 0x36, 0x35, 0x30, 0x32, 0x31,
			0x63, 0x38, 0x32, 0x62, 0x34, 0x65, 0x31, 0x35,
			0x61, 0x32, 0x63, 0x34, 0x35, 0x31, 0x33, 0x34,
			0x30, 0x39, 0x39, 0x33, 0x61, 0x61, 0x63, 0x66,
			0x64, 0x32, 0x37, 0x35, 0x31, 0x38, 0x38, 0x36,
			0x35, 0x31, 0x34, 0x66, 0x30, 0x22, 0x2c, 0x22,
			0x65, 0x69, 0x70, 0x31, 0x35, 0x35, 0x42, 0x6c,
			0x6f, 0x63, 0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22,
			0x65, 0x69, 0x70, 0x31, 0x35, 0x38, 0x42, 0x6c,
			0x6f, 0x63, 0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22,
			0x62, 0x79, 0x7a, 0x61, 0x6e, 0x74, 0x69, 0x75,
			0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x3a,
			0x30, 0x2c, 0x22, 0x63, 0x6f, 0x6e, 0x73, 0x74,
			0x61, 0x6e, 0x74, 0x69, 0x6e, 0x6f, 0x70, 0x6c,
			0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x3a,
			0x30, 0x2c, 0x22, 0x70, 0x65, 0x74, 0x65, 0x72,
			0x73, 0x62, 0x75, 0x72, 0x67, 0x42, 0x6c, 0x6f,
			0x63, 0x6b, 0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x22,
			0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x3a, 0x22,
			0x30, 0x78, 0x30, 0x22, 0x2c, 0x22, 0x74, 0x69,
			0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22,
			0x3a, 0x22, 0x30, 0x78, 0x30, 0x22, 0x2c, 0x22,
			0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74,
			0x61, 0x22, 0x3a, 0x22, 0x30, 0x78, 0x30, 0x30,
			0x22, 0x2c, 0x22, 0x67, 0x61, 0x73, 0x4c, 0x69,
			0x6d, 0x69, 0x74, 0x22, 0x3a, 0x22, 0x30, 0x78,
			0x35, 0x66, 0x35, 0x65, 0x31, 0x30, 0x30, 0x22,
			0x2c, 0x22, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63,
			0x75, 0x6c, 0x74, 0x79, 0x22, 0x3a, 0x22, 0x30,
			0x78, 0x30, 0x22, 0x2c, 0x22, 0x6d, 0x69, 0x78,
			0x48, 0x61, 0x73, 0x68, 0x22, 0x3a, 0x22, 0x30,
			0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x22, 0x2c, 0x22, 0x63, 0x6f, 0x69, 0x6e,
			0x62, 0x61, 0x73, 0x65, 0x22, 0x3a, 0x22, 0x30,
			0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x22, 0x2c, 0x22, 0x61, 0x6c, 0x6c, 0x6f,
			0x63, 0x22, 0x3a, 0x7b, 0x22, 0x35, 0x37, 0x32,
			0x66, 0x34, 0x64, 0x38, 0x30, 0x66, 0x31, 0x30,
			0x66, 0x36, 0x36, 0x33, 0x62, 0x35, 0x30, 0x34,
			0x39, 0x66, 0x37, 0x38, 0x39, 0x35, 0x34, 0x36,
			0x66, 0x32, 0x35, 0x66, 0x37, 0x30, 0x62, 0x62,
			0x36, 0x32, 0x61, 0x37, 0x66, 0x22, 0x3a, 0x7b,
			0x22, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
			0x22, 0x3a, 0x22, 0x30, 0x78, 0x33, 0x33, 0x62,
			0x32, 0x65, 0x33, 0x63, 0x39, 0x66, 0x64, 0x30,
			0x38, 0x30, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x22, 0x7d, 0x7d, 0x2c,
			0x22, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
			0x3a, 0x22, 0x30, 0x78, 0x30, 0x22, 0x2c, 0x22,
			0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x22,
			0x3a, 0x22, 0x30, 0x78, 0x30, 0x22, 0x2c, 0x22,
			0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61,
			0x73, 0x68, 0x22, 0x3a, 0x22, 0x30, 0x78, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x22,
			0x7d,
		},
		Message: "Now I am become Death, the destroyer of worlds.",
	}
	DenaliConfig = Config{
		NetworkID: constants.DenaliID,
		MintAddresses: []string{
			"denali1tzw0pxhlerlpu7ajws86cv6tzmm5lsaz47zfcs",
		},
		FundedAddresses: []string{
			"denali1vxn8qxc4wjaumd5zefh40vjx2npjeysmcmp58k",
			"denali1hcak2mtd758w0jdty76svreu84kj59fxaw96vx",
			"denali1gmf872653xykm8j7et2k8mxld046arrjslw3ep",
			"denali1gvvymfqhwns6zpy2fwnjwmfl2hkj9k4zys3sda",
			"denali19p2cct7hyz2yyh3pewltgkdr6yj67vfzehlys9",
			"denali10snn22afww6pkek89xpxu9varewxe26dgmyen9",
			"denali1y2j34gqw4nc459cmluq560xxms3l8ek8px4h2g",
			"denali13j2sd0dfngaznc5e4dzk02yhp4g3et6svhf32v",
			"denali1qc4ly2zz6zq95sd7r9r53q8hzywj0j55d6wpqk",
			"denali1qy8awey258pffs4xxl7pjs6mm8yvhhw9haqx7k",
		},
		StakerIDs: []string{
			"NodeID-LQwRLm4cbJ7T2kxcxp4uXCU5XD8DFrE1C",
			"NodeID-hArafGhY2HFTbwaaVh1CSCUCUCiJ2Vfb",
			"NodeID-2m38qc95mhHXtrhjyGbe7r2NhniqHHJRB",
			"NodeID-4QBwET5o8kUhvt9xArhir4d3R25CtmZho",
			"NodeID-NpagUxt6KQiwPch9Sd4osv8kD1TZnkjdk",
		},
		EVMBytes: []byte{
			0x7b, 0x22, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
			0x22, 0x3a, 0x7b, 0x22, 0x63, 0x68, 0x61, 0x69,
			0x6e, 0x49, 0x64, 0x22, 0x3a, 0x34, 0x33, 0x31,
			0x31, 0x30, 0x2c, 0x22, 0x68, 0x6f, 0x6d, 0x65,
			0x73, 0x74, 0x65, 0x61, 0x64, 0x42, 0x6c, 0x6f,
			0x63, 0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x64,
			0x61, 0x6f, 0x46, 0x6f, 0x72, 0x6b, 0x42, 0x6c,
			0x6f, 0x63, 0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22,
			0x64, 0x61, 0x6f, 0x46, 0x6f, 0x72, 0x6b, 0x53,
			0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x3a,
			0x74, 0x72, 0x75, 0x65, 0x2c, 0x22, 0x65, 0x69,
			0x70, 0x31, 0x35, 0x30, 0x42, 0x6c, 0x6f, 0x63,
			0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x65, 0x69,
			0x70, 0x31, 0x35, 0x30, 0x48, 0x61, 0x73, 0x68,
			0x22, 0x3a, 0x22, 0x30, 0x78, 0x32, 0x30, 0x38,
			0x36, 0x37, 0x39, 0x39, 0x61, 0x65, 0x65, 0x62,
			0x65, 0x61, 0x65, 0x31, 0x33, 0x35, 0x63, 0x32,
			0x34, 0x36, 0x63, 0x36, 0x35, 0x30, 0x32, 0x31,
			0x63, 0x38, 0x32, 0x62, 0x34, 0x65, 0x31, 0x35,
			0x61, 0x32, 0x63, 0x34, 0x35, 0x31, 0x33, 0x34,
			0x30, 0x39, 0x39, 0x33, 0x61, 0x61, 0x63, 0x66,
			0x64, 0x32, 0x37, 0x35, 0x31, 0x38, 0x38, 0x36,
			0x35, 0x31, 0x34, 0x66, 0x30, 0x22, 0x2c, 0x22,
			0x65, 0x69, 0x70, 0x31, 0x35, 0x35, 0x42, 0x6c,
			0x6f, 0x63, 0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22,
			0x65, 0x69, 0x70, 0x31, 0x35, 0x38, 0x42, 0x6c,
			0x6f, 0x63, 0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22,
			0x62, 0x79, 0x7a, 0x61, 0x6e, 0x74, 0x69, 0x75,
			0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x3a,
			0x30, 0x2c, 0x22, 0x63, 0x6f, 0x6e, 0x73, 0x74,
			0x61, 0x6e, 0x74, 0x69, 0x6e, 0x6f, 0x70, 0x6c,
			0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x3a,
			0x30, 0x2c, 0x22, 0x70, 0x65, 0x74, 0x65, 0x72,
			0x73, 0x62, 0x75, 0x72, 0x67, 0x42, 0x6c, 0x6f,
			0x63, 0x6b, 0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x22,
			0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x3a, 0x22,
			0x30, 0x78, 0x30, 0x22, 0x2c, 0x22, 0x74, 0x69,
			0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22,
			0x3a, 0x22, 0x30, 0x78, 0x30, 0x22, 0x2c, 0x22,
			0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74,
			0x61, 0x22, 0x3a, 0x22, 0x30, 0x78, 0x30, 0x30,
			0x22, 0x2c, 0x22, 0x67, 0x61, 0x73, 0x4c, 0x69,
			0x6d, 0x69, 0x74, 0x22, 0x3a, 0x22, 0x30, 0x78,
			0x35, 0x66, 0x35, 0x65, 0x31, 0x30, 0x30, 0x22,
			0x2c, 0x22, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63,
			0x75, 0x6c, 0x74, 0x79, 0x22, 0x3a, 0x22, 0x30,
			0x78, 0x30, 0x22, 0x2c, 0x22, 0x6d, 0x69, 0x78,
			0x48, 0x61, 0x73, 0x68, 0x22, 0x3a, 0x22, 0x30,
			0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x22, 0x2c, 0x22, 0x63, 0x6f, 0x69, 0x6e,
			0x62, 0x61, 0x73, 0x65, 0x22, 0x3a, 0x22, 0x30,
			0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x22, 0x2c, 0x22, 0x61, 0x6c, 0x6c, 0x6f,
			0x63, 0x22, 0x3a, 0x7b, 0x22, 0x35, 0x37, 0x32,
			0x66, 0x34, 0x64, 0x38, 0x30, 0x66, 0x31, 0x30,
			0x66, 0x36, 0x36, 0x33, 0x62, 0x35, 0x30, 0x34,
			0x39, 0x66, 0x37, 0x38, 0x39, 0x35, 0x34, 0x36,
			0x66, 0x32, 0x35, 0x66, 0x37, 0x30, 0x62, 0x62,
			0x36, 0x32, 0x61, 0x37, 0x66, 0x22, 0x3a, 0x7b,
			0x22, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
			0x22, 0x3a, 0x22, 0x30, 0x78, 0x33, 0x33, 0x62,
			0x32, 0x65, 0x33, 0x63, 0x39, 0x66, 0x64, 0x30,
			0x38, 0x30, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x22, 0x7d, 0x7d, 0x2c,
			0x22, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
			0x3a, 0x22, 0x30, 0x78, 0x30, 0x22, 0x2c, 0x22,
			0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x22,
			0x3a, 0x22, 0x30, 0x78, 0x30, 0x22, 0x2c, 0x22,
			0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61,
			0x73, 0x68, 0x22, 0x3a, 0x22, 0x30, 0x78, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x22,
			0x7d,
		},
	}
	CascadeConfig = Config{
		NetworkID: constants.CascadeID,
		MintAddresses: []string{
			"cascade1tzw0pxhlerlpu7ajws86cv6tzmm5lsazrac34s",
		},
		FundedAddresses: []string{
			"cascade1vxn8qxc4wjaumd5zefh40vjx2npjeysmwcmv2k",
			"cascade1hcak2mtd758w0jdty76svreu84kj59fxtdlzpx",
			"cascade1gmf872653xykm8j7et2k8mxld046arrjxu5f5p",
			"cascade1gvvymfqhwns6zpy2fwnjwmfl2hkj9k4zjntgqa",
			"cascade19p2cct7hyz2yyh3pewltgkdr6yj67vfz059ua9",
			"cascade10snn22afww6pkek89xpxu9varewxe26d7c7p79",
			"cascade1y2j34gqw4nc459cmluq560xxms3l8ek8h9008g",
			"cascade13j2sd0dfngaznc5e4dzk02yhp4g3et6s65nf8v",
			"cascade1qc4ly2zz6zq95sd7r9r53q8hzywj0j55me5edk",
			"cascade1qy8awey258pffs4xxl7pjs6mm8yvhhw9p767nk",
		},
		StakerIDs: []string{
			"NodeID-NX4zVkuiRJZYe6Nzzav7GXN3TakUet3Co",
			"NodeID-CMsa8cMw4eib1Hb8GG4xiUKAq5eE1BwUX",
			"NodeID-DsMP6jLhi1MkDVc3qx9xx9AAZWx8e87Jd",
			"NodeID-N86eodVZja3GEyZJTo3DFUPGpxEEvjGHs",
			"NodeID-EkKeGSLUbHrrtuayBtbwgWDRUiAziC3ao",
		},
		EVMBytes: []byte{
			0x7b, 0x22, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
			0x22, 0x3a, 0x7b, 0x22, 0x63, 0x68, 0x61, 0x69,
			0x6e, 0x49, 0x64, 0x22, 0x3a, 0x34, 0x33, 0x31,
			0x31, 0x30, 0x2c, 0x22, 0x68, 0x6f, 0x6d, 0x65,
			0x73, 0x74, 0x65, 0x61, 0x64, 0x42, 0x6c, 0x6f,
			0x63, 0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x64,
			0x61, 0x6f, 0x46, 0x6f, 0x72, 0x6b, 0x42, 0x6c,
			0x6f, 0x63, 0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22,
			0x64, 0x61, 0x6f, 0x46, 0x6f, 0x72, 0x6b, 0x53,
			0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x3a,
			0x74, 0x72, 0x75, 0x65, 0x2c, 0x22, 0x65, 0x69,
			0x70, 0x31, 0x35, 0x30, 0x42, 0x6c, 0x6f, 0x63,
			0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x65, 0x69,
			0x70, 0x31, 0x35, 0x30, 0x48, 0x61, 0x73, 0x68,
			0x22, 0x3a, 0x22, 0x30, 0x78, 0x32, 0x30, 0x38,
			0x36, 0x37, 0x39, 0x39, 0x61, 0x65, 0x65, 0x62,
			0x65, 0x61, 0x65, 0x31, 0x33, 0x35, 0x63, 0x32,
			0x34, 0x36, 0x63, 0x36, 0x35, 0x30, 0x32, 0x31,
			0x63, 0x38, 0x32, 0x62, 0x34, 0x65, 0x31, 0x35,
			0x61, 0x32, 0x63, 0x34, 0x35, 0x31, 0x33, 0x34,
			0x30, 0x39, 0x39, 0x33, 0x61, 0x61, 0x63, 0x66,
			0x64, 0x32, 0x37, 0x35, 0x31, 0x38, 0x38, 0x36,
			0x35, 0x31, 0x34, 0x66, 0x30, 0x22, 0x2c, 0x22,
			0x65, 0x69, 0x70, 0x31, 0x35, 0x35, 0x42, 0x6c,
			0x6f, 0x63, 0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22,
			0x65, 0x69, 0x70, 0x31, 0x35, 0x38, 0x42, 0x6c,
			0x6f, 0x63, 0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22,
			0x62, 0x79, 0x7a, 0x61, 0x6e, 0x74, 0x69, 0x75,
			0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x3a,
			0x30, 0x2c, 0x22, 0x63, 0x6f, 0x6e, 0x73, 0x74,
			0x61, 0x6e, 0x74, 0x69, 0x6e, 0x6f, 0x70, 0x6c,
			0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x3a,
			0x30, 0x2c, 0x22, 0x70, 0x65, 0x74, 0x65, 0x72,
			0x73, 0x62, 0x75, 0x72, 0x67, 0x42, 0x6c, 0x6f,
			0x63, 0x6b, 0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x22,
			0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x3a, 0x22,
			0x30, 0x78, 0x30, 0x22, 0x2c, 0x22, 0x74, 0x69,
			0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22,
			0x3a, 0x22, 0x30, 0x78, 0x30, 0x22, 0x2c, 0x22,
			0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74,
			0x61, 0x22, 0x3a, 0x22, 0x30, 0x78, 0x30, 0x30,
			0x22, 0x2c, 0x22, 0x67, 0x61, 0x73, 0x4c, 0x69,
			0x6d, 0x69, 0x74, 0x22, 0x3a, 0x22, 0x30, 0x78,
			0x35, 0x66, 0x35, 0x65, 0x31, 0x30, 0x30, 0x22,
			0x2c, 0x22, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63,
			0x75, 0x6c, 0x74, 0x79, 0x22, 0x3a, 0x22, 0x30,
			0x78, 0x30, 0x22, 0x2c, 0x22, 0x6d, 0x69, 0x78,
			0x48, 0x61, 0x73, 0x68, 0x22, 0x3a, 0x22, 0x30,
			0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x22, 0x2c, 0x22, 0x63, 0x6f, 0x69, 0x6e,
			0x62, 0x61, 0x73, 0x65, 0x22, 0x3a, 0x22, 0x30,
			0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x22, 0x2c, 0x22, 0x61, 0x6c, 0x6c, 0x6f,
			0x63, 0x22, 0x3a, 0x7b, 0x22, 0x35, 0x37, 0x32,
			0x66, 0x34, 0x64, 0x38, 0x30, 0x66, 0x31, 0x30,
			0x66, 0x36, 0x36, 0x33, 0x62, 0x35, 0x30, 0x34,
			0x39, 0x66, 0x37, 0x38, 0x39, 0x35, 0x34, 0x36,
			0x66, 0x32, 0x35, 0x66, 0x37, 0x30, 0x62, 0x62,
			0x36, 0x32, 0x61, 0x37, 0x66, 0x22, 0x3a, 0x7b,
			0x22, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
			0x22, 0x3a, 0x22, 0x30, 0x78, 0x33, 0x33, 0x62,
			0x32, 0x65, 0x33, 0x63, 0x39, 0x66, 0x64, 0x30,
			0x38, 0x30, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x22, 0x7d, 0x7d, 0x2c,
			0x22, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
			0x3a, 0x22, 0x30, 0x78, 0x30, 0x22, 0x2c, 0x22,
			0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x22,
			0x3a, 0x22, 0x30, 0x78, 0x30, 0x22, 0x2c, 0x22,
			0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61,
			0x73, 0x68, 0x22, 0x3a, 0x22, 0x30, 0x78, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x22,
			0x7d,
		},
	}
	LocalConfig = Config{
		NetworkID:     constants.LocalID,
		MintAddresses: []string{},
		FundedAddresses: []string{
			// Private key: ewoqjP7PxY4yr3iLTpLisriqt94hdyDFNgchSxGGztUrTXtNN
			"local18jma8ppw3nhx5r4ap8clazz0dps7rv5u00z96u",
		},
		StakerIDs: []string{
			"NodeID-7Xhw2mDxuDS44j42TCB6U5579esbSt3Lg",
			"NodeID-MFrZFVCXPv5iCn6M9K6XduxGTYp891xXZ",
			"NodeID-NFBbbJ4qCmNaCzeW7sxErhvWqvEQMnYcN",
			"NodeID-GWPcbFJZFfZreETSoWjPimr846mXEKCtu",
			"NodeID-P7oB2McjBGgW2NXXWVYjV8JEDFoW9xDE5",
		},
		EVMBytes: []byte{
			0x7b, 0x22, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
			0x22, 0x3a, 0x7b, 0x22, 0x63, 0x68, 0x61, 0x69,
			0x6e, 0x49, 0x64, 0x22, 0x3a, 0x34, 0x33, 0x31,
			0x31, 0x30, 0x2c, 0x22, 0x68, 0x6f, 0x6d, 0x65,
			0x73, 0x74, 0x65, 0x61, 0x64, 0x42, 0x6c, 0x6f,
			0x63, 0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x64,
			0x61, 0x6f, 0x46, 0x6f, 0x72, 0x6b, 0x42, 0x6c,
			0x6f, 0x63, 0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22,
			0x64, 0x61, 0x6f, 0x46, 0x6f, 0x72, 0x6b, 0x53,
			0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x3a,
			0x74, 0x72, 0x75, 0x65, 0x2c, 0x22, 0x65, 0x69,
			0x70, 0x31, 0x35, 0x30, 0x42, 0x6c, 0x6f, 0x63,
			0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x65, 0x69,
			0x70, 0x31, 0x35, 0x30, 0x48, 0x61, 0x73, 0x68,
			0x22, 0x3a, 0x22, 0x30, 0x78, 0x32, 0x30, 0x38,
			0x36, 0x37, 0x39, 0x39, 0x61, 0x65, 0x65, 0x62,
			0x65, 0x61, 0x65, 0x31, 0x33, 0x35, 0x63, 0x32,
			0x34, 0x36, 0x63, 0x36, 0x35, 0x30, 0x32, 0x31,
			0x63, 0x38, 0x32, 0x62, 0x34, 0x65, 0x31, 0x35,
			0x61, 0x32, 0x63, 0x34, 0x35, 0x31, 0x33, 0x34,
			0x30, 0x39, 0x39, 0x33, 0x61, 0x61, 0x63, 0x66,
			0x64, 0x32, 0x37, 0x35, 0x31, 0x38, 0x38, 0x36,
			0x35, 0x31, 0x34, 0x66, 0x30, 0x22, 0x2c, 0x22,
			0x65, 0x69, 0x70, 0x31, 0x35, 0x35, 0x42, 0x6c,
			0x6f, 0x63, 0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22,
			0x65, 0x69, 0x70, 0x31, 0x35, 0x38, 0x42, 0x6c,
			0x6f, 0x63, 0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22,
			0x62, 0x79, 0x7a, 0x61, 0x6e, 0x74, 0x69, 0x75,
			0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x3a,
			0x30, 0x2c, 0x22, 0x63, 0x6f, 0x6e, 0x73, 0x74,
			0x61, 0x6e, 0x74, 0x69, 0x6e, 0x6f, 0x70, 0x6c,
			0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x3a,
			0x30, 0x2c, 0x22, 0x70, 0x65, 0x74, 0x65, 0x72,
			0x73, 0x62, 0x75, 0x72, 0x67, 0x42, 0x6c, 0x6f,
			0x63, 0x6b, 0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x22,
			0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x3a, 0x22,
			0x30, 0x78, 0x30, 0x22, 0x2c, 0x22, 0x74, 0x69,
			0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22,
			0x3a, 0x22, 0x30, 0x78, 0x30, 0x22, 0x2c, 0x22,
			0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74,
			0x61, 0x22, 0x3a, 0x22, 0x30, 0x78, 0x30, 0x30,
			0x22, 0x2c, 0x22, 0x67, 0x61, 0x73, 0x4c, 0x69,
			0x6d, 0x69, 0x74, 0x22, 0x3a, 0x22, 0x30, 0x78,
			0x35, 0x66, 0x35, 0x65, 0x31, 0x30, 0x30, 0x22,
			0x2c, 0x22, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63,
			0x75, 0x6c, 0x74, 0x79, 0x22, 0x3a, 0x22, 0x30,
			0x78, 0x30, 0x22, 0x2c, 0x22, 0x6d, 0x69, 0x78,
			0x48, 0x61, 0x73, 0x68, 0x22, 0x3a, 0x22, 0x30,
			0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x22, 0x2c, 0x22, 0x63, 0x6f, 0x69, 0x6e,
			0x62, 0x61, 0x73, 0x65, 0x22, 0x3a, 0x22, 0x30,
			0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x22, 0x2c, 0x22, 0x61, 0x6c, 0x6c, 0x6f,
			0x63, 0x22, 0x3a, 0x7b, 0x22, 0x37, 0x35, 0x31,
			0x61, 0x30, 0x62, 0x39, 0x36, 0x65, 0x31, 0x30,
			0x34, 0x32, 0x62, 0x65, 0x65, 0x37, 0x38, 0x39,
			0x34, 0x35, 0x32, 0x65, 0x63, 0x62, 0x32, 0x30,
			0x32, 0x35, 0x33, 0x66, 0x62, 0x61, 0x34, 0x30,
			0x64, 0x62, 0x65, 0x38, 0x35, 0x22, 0x3a, 0x7b,
			0x22, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
			0x22, 0x3a, 0x22, 0x30, 0x78, 0x33, 0x33, 0x62,
			0x32, 0x65, 0x33, 0x63, 0x39, 0x66, 0x64, 0x30,
			0x38, 0x30, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x22, 0x7d, 0x7d, 0x2c,
			0x22, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
			0x3a, 0x22, 0x30, 0x78, 0x30, 0x22, 0x2c, 0x22,
			0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x22,
			0x3a, 0x22, 0x30, 0x78, 0x30, 0x22, 0x2c, 0x22,
			0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61,
			0x73, 0x68, 0x22, 0x3a, 0x22, 0x30, 0x78, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x22,
			0x7d,
		},
		Message: "Hello World!",
	}
	CustomConfig = Config{
		NetworkID:     math.MaxUint32,
		MintAddresses: []string{},
		FundedAddresses: []string{
			// Private key: ewoqjP7PxY4yr3iLTpLisriqt94hdyDFNgchSxGGztUrTXtNN
			"custom18jma8ppw3nhx5r4ap8clazz0dps7rv5u9xde7p",
		},
		StakerIDs: []string{
			"NodeID-7Xhw2mDxuDS44j42TCB6U5579esbSt3Lg",
			"NodeID-MFrZFVCXPv5iCn6M9K6XduxGTYp891xXZ",
			"NodeID-NFBbbJ4qCmNaCzeW7sxErhvWqvEQMnYcN",
			"NodeID-GWPcbFJZFfZreETSoWjPimr846mXEKCtu",
			"NodeID-P7oB2McjBGgW2NXXWVYjV8JEDFoW9xDE5",
		},
		EVMBytes: []byte{
			0x7b, 0x22, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
			0x22, 0x3a, 0x7b, 0x22, 0x63, 0x68, 0x61, 0x69,
			0x6e, 0x49, 0x64, 0x22, 0x3a, 0x34, 0x33, 0x31,
			0x31, 0x30, 0x2c, 0x22, 0x68, 0x6f, 0x6d, 0x65,
			0x73, 0x74, 0x65, 0x61, 0x64, 0x42, 0x6c, 0x6f,
			0x63, 0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x64,
			0x61, 0x6f, 0x46, 0x6f, 0x72, 0x6b, 0x42, 0x6c,
			0x6f, 0x63, 0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22,
			0x64, 0x61, 0x6f, 0x46, 0x6f, 0x72, 0x6b, 0x53,
			0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x3a,
			0x74, 0x72, 0x75, 0x65, 0x2c, 0x22, 0x65, 0x69,
			0x70, 0x31, 0x35, 0x30, 0x42, 0x6c, 0x6f, 0x63,
			0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x65, 0x69,
			0x70, 0x31, 0x35, 0x30, 0x48, 0x61, 0x73, 0x68,
			0x22, 0x3a, 0x22, 0x30, 0x78, 0x32, 0x30, 0x38,
			0x36, 0x37, 0x39, 0x39, 0x61, 0x65, 0x65, 0x62,
			0x65, 0x61, 0x65, 0x31, 0x33, 0x35, 0x63, 0x32,
			0x34, 0x36, 0x63, 0x36, 0x35, 0x30, 0x32, 0x31,
			0x63, 0x38, 0x32, 0x62, 0x34, 0x65, 0x31, 0x35,
			0x61, 0x32, 0x63, 0x34, 0x35, 0x31, 0x33, 0x34,
			0x30, 0x39, 0x39, 0x33, 0x61, 0x61, 0x63, 0x66,
			0x64, 0x32, 0x37, 0x35, 0x31, 0x38, 0x38, 0x36,
			0x35, 0x31, 0x34, 0x66, 0x30, 0x22, 0x2c, 0x22,
			0x65, 0x69, 0x70, 0x31, 0x35, 0x35, 0x42, 0x6c,
			0x6f, 0x63, 0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22,
			0x65, 0x69, 0x70, 0x31, 0x35, 0x38, 0x42, 0x6c,
			0x6f, 0x63, 0x6b, 0x22, 0x3a, 0x30, 0x2c, 0x22,
			0x62, 0x79, 0x7a, 0x61, 0x6e, 0x74, 0x69, 0x75,
			0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x3a,
			0x30, 0x2c, 0x22, 0x63, 0x6f, 0x6e, 0x73, 0x74,
			0x61, 0x6e, 0x74, 0x69, 0x6e, 0x6f, 0x70, 0x6c,
			0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x3a,
			0x30, 0x2c, 0x22, 0x70, 0x65, 0x74, 0x65, 0x72,
			0x73, 0x62, 0x75, 0x72, 0x67, 0x42, 0x6c, 0x6f,
			0x63, 0x6b, 0x22, 0x3a, 0x30, 0x7d, 0x2c, 0x22,
			0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x3a, 0x22,
			0x30, 0x78, 0x30, 0x22, 0x2c, 0x22, 0x74, 0x69,
			0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22,
			0x3a, 0x22, 0x30, 0x78, 0x30, 0x22, 0x2c, 0x22,
			0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74,
			0x61, 0x22, 0x3a, 0x22, 0x30, 0x78, 0x30, 0x30,
			0x22, 0x2c, 0x22, 0x67, 0x61, 0x73, 0x4c, 0x69,
			0x6d, 0x69, 0x74, 0x22, 0x3a, 0x22, 0x30, 0x78,
			0x35, 0x66, 0x35, 0x65, 0x31, 0x30, 0x30, 0x22,
			0x2c, 0x22, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63,
			0x75, 0x6c, 0x74, 0x79, 0x22, 0x3a, 0x22, 0x30,
			0x78, 0x30, 0x22, 0x2c, 0x22, 0x6d, 0x69, 0x78,
			0x48, 0x61, 0x73, 0x68, 0x22, 0x3a, 0x22, 0x30,
			0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x22, 0x2c, 0x22, 0x63, 0x6f, 0x69, 0x6e,
			0x62, 0x61, 0x73, 0x65, 0x22, 0x3a, 0x22, 0x30,
			0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x22, 0x2c, 0x22, 0x61, 0x6c, 0x6c, 0x6f,
			0x63, 0x22, 0x3a, 0x7b, 0x22, 0x37, 0x35, 0x31,
			0x61, 0x30, 0x62, 0x39, 0x36, 0x65, 0x31, 0x30,
			0x34, 0x32, 0x62, 0x65, 0x65, 0x37, 0x38, 0x39,
			0x34, 0x35, 0x32, 0x65, 0x63, 0x62, 0x32, 0x30,
			0x32, 0x35, 0x33, 0x66, 0x62, 0x61, 0x34, 0x30,
			0x64, 0x62, 0x65, 0x38, 0x35, 0x22, 0x3a, 0x7b,
			0x22, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
			0x22, 0x3a, 0x22, 0x30, 0x78, 0x33, 0x33, 0x62,
			0x32, 0x65, 0x33, 0x63, 0x39, 0x66, 0x64, 0x30,
			0x38, 0x30, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x22, 0x7d, 0x7d, 0x2c,
			0x22, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
			0x3a, 0x22, 0x30, 0x78, 0x30, 0x22, 0x2c, 0x22,
			0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x22,
			0x3a, 0x22, 0x30, 0x78, 0x30, 0x22, 0x2c, 0x22,
			0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61,
			0x73, 0x68, 0x22, 0x3a, 0x22, 0x30, 0x78, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
			0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x22,
			0x7d,
		},
	}
)

// GetConfig ...
func GetConfig(networkID uint32) *Config {
	switch networkID {
	case constants.EverestID:
		return &EverestConfig
	case constants.DenaliID:
		return &DenaliConfig
	case constants.CascadeID:
		return &CascadeConfig
	case constants.LocalID:
		return &LocalConfig
	default:
		return &CustomConfig
	}
}
