syntax = "proto3";

package vmproto;

option go_package = "github.com/ava-labs/avalanchego/vms/rpcchainvm/vmproto";

// To compile: protoc --go_out=plugins=grpc:. vm.proto

message InitializeRequest {
    uint32 networkID = 1;
    bytes subnetID = 2;
    bytes chainID = 3;
    bytes nodeID = 4;
    bytes xChainID = 5;
    bytes avaxAssetID = 6;
    bytes genesisBytes = 7;
    bytes upgradeBytes = 8;
    bytes configBytes = 9;

    repeated VersionedDBServer dbServers = 10;
    uint32 engineServer = 11;
    uint32 keystoreServer = 12;
    uint32 sharedMemoryServer = 13;
    uint32 bcLookupServer = 14;
    uint32 snLookupServer = 15;

    bytes epochFirstTransition = 16;
    uint64 EpochDuration = 17;
}

message InitializeResponse {
    bytes lastAcceptedID = 1;
    bytes lastAcceptedParentID = 2;
    uint32 status = 3;
    uint64 height = 4;
    bytes bytes = 5;
}

message VersionedDBServer {
    uint32 dbServer = 1;
    string version = 2;
}

message BootstrappingRequest {}

message BootstrappingResponse {}

message BootstrappedRequest {}

message BootstrappedResponse {}

message ShutdownRequest {}

message ShutdownResponse {}

message CreateHandlersRequest {}

message CreateHandlersResponse {
    repeated Handler handlers = 1;
}

message CreateStaticHandlersRequest {}

message CreateStaticHandlersResponse {
    repeated Handler handlers = 1;
}

message Handler {
    string prefix = 1;
    uint32 lockOptions = 2;
    uint32 server = 3;
}

message BuildBlockRequest {}

message BuildBlockResponse {
    bytes id = 1;
    bytes parentID = 2;
    bytes bytes = 3;
    uint64 height = 4;
    // status is always processing
}

message ParseBlockRequest {
    bytes bytes = 1;
}

message ParseBlockResponse {
    bytes id = 1;
    bytes parentID = 2;
    uint32 status = 3;
    uint64 height = 4;
}

message GetBlockRequest {
    bytes id = 1;
}

message GetBlockResponse {
    bytes parentID = 1;
    bytes bytes = 2;
    uint32 status = 3;
    uint64 height = 4;
}

message SetPreferenceRequest {
    bytes id = 1;
}

message SetPreferenceResponse {}

message BlockVerifyRequest {
    bytes bytes = 1;
}

message BlockVerifyResponse {}

message BlockAcceptRequest {
    bytes id = 1;
}

message BlockAcceptResponse {}

message BlockRejectRequest {
    bytes id = 1;
}

message BlockRejectResponse {}

message HealthRequest {}

message HealthResponse {
    string details = 1;
}

message VersionRequest {}

message VersionResponse {
    string version = 1;
}

message AppRequestMsg {
    // The node that sent us this request
    bytes nodeID = 1;
    // The ID of this request
    uint32 requestID = 2;
    // The request body
    bytes request = 3;
}

message AppRequestResponse {}

message AppRequestFailedMsg {
    // The node that we failed to get a response from
    bytes nodeID = 1;
    // The ID of the request we sent and didn't get a response to
    uint32 requestID = 2;
}

message AppRequestFailedResponse {}

message AppResponseMsg {
    // The node that we got a response from
    bytes nodeID = 1;
    // Request ID of request that this is in response to
    uint32 requestID = 2;
    // The response body
    bytes response = 3;
}

message AppResponseResponse {}

message AppGossipMsg {
    // The node that sent us a gossip message
    bytes nodeID = 1;
    // ID of this message
    uint32 msgID = 2;
    // The message body
    bytes msg = 3;
}

message AppGossipResponse {}

service VM {
    rpc Initialize(InitializeRequest) returns (InitializeResponse);
    rpc Bootstrapping(BootstrappingRequest) returns (BootstrappingResponse);
    rpc Bootstrapped(BootstrappedRequest) returns (BootstrappedResponse);
    rpc Shutdown(ShutdownRequest) returns (ShutdownResponse);
    rpc CreateHandlers(CreateHandlersRequest) returns (CreateHandlersResponse);
    rpc CreateStaticHandlers(CreateStaticHandlersRequest) returns (CreateStaticHandlersResponse);
    rpc BuildBlock(BuildBlockRequest) returns (BuildBlockResponse);
    rpc ParseBlock(ParseBlockRequest) returns (ParseBlockResponse);
    rpc GetBlock(GetBlockRequest) returns (GetBlockResponse);
    rpc SetPreference(SetPreferenceRequest) returns (SetPreferenceResponse);
    rpc Health(HealthRequest) returns (HealthResponse);
    rpc Version(VersionRequest) returns (VersionResponse);
    rpc AppRequest(AppRequestMsg) returns (AppRequestResponse);
    rpc AppRequestFailed(AppRequestFailedMsg) returns (AppRequestFailedResponse);
    rpc AppResponse(AppResponseMsg) returns (AppResponseResponse);
    rpc AppGossip(AppGossipMsg) returns (AppGossipResponse);

    rpc BlockVerify(BlockVerifyRequest) returns (BlockVerifyResponse);
    rpc BlockAccept(BlockAcceptRequest) returns (BlockAcceptResponse);
    rpc BlockReject(BlockRejectRequest) returns (BlockRejectResponse);
}
